//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.jcore_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.jcore_fluttify.JcoreFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler0 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // getter
            put("cn.jiguang.net.DefaultHostVerifier::get_a", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.net.DefaultHostVerifier ref = (cn.jiguang.net.DefaultHostVerifier) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.a;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_APP_KEY", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.APP_KEY;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_TUU", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.TUU;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_AT_I", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.AT_I;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SUPPORT_DY", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.SUPPORT_DY;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SDK_NAME", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.SDK_NAME;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SDK_VERSION_INT", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.SDK_VERSION_INT;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_LOG_ENABLE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.LOG_ENABLE;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_DEBUG_MODE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.DEBUG_MODE;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_LOG_FILE_ENABLE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.LOG_FILE_ENABLE;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_INTERNAL_USE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.INTERNAL_USE;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_IS_FOR_GOOGLE_PLAY_USE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.IS_FOR_GOOGLE_PLAY_USE;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SECOND", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               long __result__ = ref.SECOND;
            
               long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_MIN", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               long __result__ = ref.MIN;
            
               long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_HOUR", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               long __result__ = ref.HOUR;
            
               long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_DAY", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               long __result__ = ref.DAY;
            
               long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_REPORT_USE_HTTPS", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.REPORT_USE_HTTPS;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_REPORT_SUPPORT_HTTP", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.REPORT_SUPPORT_HTTP;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_isInstrumentationHookFailed", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.isInstrumentationHookFailed;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_DEFAULT_HEARTBEAT_INTERVAL", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.DEFAULT_HEARTBEAT_INTERVAL;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_DEFAULT_ALARM_DELAY", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.DEFAULT_ALARM_DELAY;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_AES_CBC", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               byte __result__ = ref.AES_CBC;
            
               byte jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SM4_CBC", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               byte __result__ = ref.SM4_CBC;
            
               byte jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_tcpAlgorithm", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               byte __result__ = ref.tcpAlgorithm;
            
               byte jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_tcpSessionId", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.tcpSessionId;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_testCountry", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.testCountry;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_mApplicationContext", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
               android.content.Context __result__ = ref.mApplicationContext;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_DEBUG", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.DEBUG;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_INTERNAL_USE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.INTERNAL_USE;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_FILE_ENABLED", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.FILE_ENABLED;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_IS_FOR_GOOGLE_PLAY_USE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.IS_FOR_GOOGLE_PLAY_USE;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_LOG_ENABLE", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.LOG_ENABLE;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_SUPPORT_DY", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.SUPPORT_DY;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.dy.Protocol::get_mContext", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.dy.Protocol ref = (cn.jiguang.dy.Protocol) getHEAP().get((int) __args__.get("refId"));
            
               android.content.Context __result__ = ref.mContext;
            
               Integer jsonableResult = null;
               if (__result__ != null) {
                   jsonableResult = System.identityHashCode(__result__);
                   getHEAP().put(jsonableResult, __result__);
               }
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.api.JResponse::get_code", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.api.JResponse ref = (cn.jiguang.api.JResponse) getHEAP().get((int) __args__.get("refId"));
            
               int __result__ = ref.code;
            
               int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.api.JCoreInterface::get_DAEMON_ACTION", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.api.JCoreInterface ref = (cn.jiguang.api.JCoreInterface) getHEAP().get((int) __args__.get("refId"));
            
               String __result__ = ref.DAEMON_ACTION;
            
               String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.analytics.page.PushSA::get_isOnResumeInvoke", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.isOnResumeInvoke;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.analytics.page.PushSA::get_isOnPauseInvoke", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.isOnPauseInvoke;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jcore.client.android.BuildConfig::get_DEBUG", (__rawArgs__, __methodResult__) -> {
               Map<String, Object> __args__ = (Map<String, Object>) __rawArgs__;
            
               // ref object
               cn.jcore.client.android.BuildConfig ref = (cn.jcore.client.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
               boolean __result__ = ref.DEBUG;
            
               boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // getter
            put("cn.jiguang.net.DefaultHostVerifier::get_a_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.net.DefaultHostVerifier ref = (cn.jiguang.net.DefaultHostVerifier) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.a;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_APP_KEY_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.APP_KEY;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_TUU_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.TUU;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_AT_I_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.AT_I;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SUPPORT_DY_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.SUPPORT_DY;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SDK_NAME_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.SDK_NAME;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SDK_VERSION_INT_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.SDK_VERSION_INT;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_LOG_ENABLE_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.LOG_ENABLE;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_DEBUG_MODE_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.DEBUG_MODE;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_LOG_FILE_ENABLE_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.LOG_FILE_ENABLE;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_INTERNAL_USE_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.INTERNAL_USE;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_IS_FOR_GOOGLE_PLAY_USE_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.IS_FOR_GOOGLE_PLAY_USE;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SECOND_batch", (__argsBatch__, __methodResult__) -> {
                List<Long> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    long __result__ = ref.SECOND;
            
                    long jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_MIN_batch", (__argsBatch__, __methodResult__) -> {
                List<Long> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    long __result__ = ref.MIN;
            
                    long jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_HOUR_batch", (__argsBatch__, __methodResult__) -> {
                List<Long> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    long __result__ = ref.HOUR;
            
                    long jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_DAY_batch", (__argsBatch__, __methodResult__) -> {
                List<Long> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    long __result__ = ref.DAY;
            
                    long jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_REPORT_USE_HTTPS_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.REPORT_USE_HTTPS;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_REPORT_SUPPORT_HTTP_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.REPORT_SUPPORT_HTTP;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_isInstrumentationHookFailed_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.isInstrumentationHookFailed;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_DEFAULT_HEARTBEAT_INTERVAL_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.DEFAULT_HEARTBEAT_INTERVAL;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_DEFAULT_ALARM_DELAY_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.DEFAULT_ALARM_DELAY;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_AES_CBC_batch", (__argsBatch__, __methodResult__) -> {
                List<Byte> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    byte __result__ = ref.AES_CBC;
            
                    byte jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_SM4_CBC_batch", (__argsBatch__, __methodResult__) -> {
                List<Byte> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    byte __result__ = ref.SM4_CBC;
            
                    byte jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_tcpAlgorithm_batch", (__argsBatch__, __methodResult__) -> {
                List<Byte> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    byte __result__ = ref.tcpAlgorithm;
            
                    byte jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_tcpSessionId_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.tcpSessionId;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_testCountry_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.testCountry;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.internal.JConstants::get_mApplicationContext_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.internal.JConstants ref = (cn.jiguang.internal.JConstants) getHEAP().get((int) __args__.get("refId"));
            
                    android.content.Context __result__ = ref.mApplicationContext;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_DEBUG_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.DEBUG;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_INTERNAL_USE_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.INTERNAL_USE;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_FILE_ENABLED_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.FILE_ENABLED;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_IS_FOR_GOOGLE_PLAY_USE_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.IS_FOR_GOOGLE_PLAY_USE;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_LOG_ENABLE_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.LOG_ENABLE;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.android.BuildConfig::get_SUPPORT_DY_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.android.BuildConfig ref = (cn.jiguang.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.SUPPORT_DY;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.dy.Protocol::get_mContext_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.dy.Protocol ref = (cn.jiguang.dy.Protocol) getHEAP().get((int) __args__.get("refId"));
            
                    android.content.Context __result__ = ref.mContext;
            
                    Integer jsonableResult = null;
            if (__result__ != null) {
                jsonableResult = System.identityHashCode(__result__);
                getHEAP().put(jsonableResult, __result__);
            }
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.api.JResponse::get_code_batch", (__argsBatch__, __methodResult__) -> {
                List<Integer> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.api.JResponse ref = (cn.jiguang.api.JResponse) getHEAP().get((int) __args__.get("refId"));
            
                    int __result__ = ref.code;
            
                    int jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.api.JCoreInterface::get_DAEMON_ACTION_batch", (__argsBatch__, __methodResult__) -> {
                List<String> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.api.JCoreInterface ref = (cn.jiguang.api.JCoreInterface) getHEAP().get((int) __args__.get("refId"));
            
                    String __result__ = ref.DAEMON_ACTION;
            
                    String jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.analytics.page.PushSA::get_isOnResumeInvoke_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.isOnResumeInvoke;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jiguang.analytics.page.PushSA::get_isOnPauseInvoke_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.isOnPauseInvoke;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // getter
            put("cn.jcore.client.android.BuildConfig::get_DEBUG_batch", (__argsBatch__, __methodResult__) -> {
                List<Boolean> __resultList__ = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // ref object
                    cn.jcore.client.android.BuildConfig ref = (cn.jcore.client.android.BuildConfig) getHEAP().get((int) __args__.get("refId"));
            
                    boolean __result__ = ref.DEBUG;
            
                    boolean jsonableResult = __result__;
            
                    __resultList__.add(jsonableResult);
                }
            
                __methodResult__.success(__resultList__);
            });
            // setter
            put("cn.jiguang.net.DefaultHostVerifier::set_a", (__args__, __methodResult__) -> {
                // jsonable arg
                String a = (String) ((Map<String, Object>) __args__).get("a");
            
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.DefaultHostVerifier ref = (cn.jiguang.net.DefaultHostVerifier) getHEAP().get(refId);
            
                ref.a = a;
                __methodResult__.success("success");
            });
            // setter
            put("cn.jiguang.api.JResponse::set_code", (__args__, __methodResult__) -> {
                // jsonable arg
                int code = (int) ((Map<String, Object>) __args__).get("code");
            
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JResponse ref = (cn.jiguang.api.JResponse) getHEAP().get(refId);
            
                ref.code = code;
                __methodResult__.success("success");
            });
            // setter batch
            put("cn.jiguang.net.DefaultHostVerifier::set_a_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // jsonable arg
                    String a = (String) ((Map<String, Object>) __args__).get("a");
            
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    cn.jiguang.net.DefaultHostVerifier ref = (cn.jiguang.net.DefaultHostVerifier) getHEAP().get(refId);
            
                    ref.a = a;
                }
            
                __methodResult__.success("success");
            });
            // setter batch
            put("cn.jiguang.api.JResponse::set_code_batch", (__argsBatch__, __methodResult__) -> {
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) __argsBatch__).size(); __i__++) {
                    Map<String, Object> __args__ = ((List<Map<String, Object>>) __argsBatch__).get(__i__);
            
                    // jsonable arg
                    int code = (int) ((Map<String, Object>) __args__).get("code");
            
                    int refId = (int) ((Map<String, Object>) __args__).get("refId");
                    cn.jiguang.api.JResponse ref = (cn.jiguang.api.JResponse) getHEAP().get(refId);
            
                    ref.code = code;
                }
            
                __methodResult__.success("success");
            });
            // method
            put("cn.jiguang.net.HttpRequest::getUrl", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getUrl(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getUrl();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::getConnectTimeout", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getConnectTimeout(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getConnectTimeout();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setConnectTimeout", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setConnectTimeout(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setConnectTimeout(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::getReadTimeout", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getReadTimeout(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getReadTimeout();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setReadTimeout", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setReadTimeout(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setReadTimeout(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setUrl", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setUrl(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setUrl(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::getBody", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getBody(" + "" + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.getBody();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setBody", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.lang.Object var1 = (java.lang.Object) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setBody(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBody(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::isDoOutPut", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isDoOutPut(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isDoOutPut();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setDoOutPut", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setDoOutPut(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDoOutPut(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::isDoInPut", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isDoInPut(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isDoInPut();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setDoInPut", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setDoInPut(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDoInPut(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::isUseCaches", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isUseCaches(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isUseCaches();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setUseCaches", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setUseCaches(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setUseCaches(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::isNeedErrorInput", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isNeedErrorInput(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isNeedErrorInput();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setNeedErrorInput", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setNeedErrorInput(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setNeedErrorInput(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::isNeedRetryIfHttpsFailed", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isNeedRetryIfHttpsFailed(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isNeedRetryIfHttpsFailed();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setNeedRetryIfHttpsFailed", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setNeedRetryIfHttpsFailed(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setNeedRetryIfHttpsFailed(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::getParasMap", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getParasMap(" + "" + ")");
                }
            
                // invoke native method
                java.util.Map<String,String> __result__;
                try {
                    __result__ = ref.getParasMap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.util.Map<String,String> jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setParasMap", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.util.Map<String,String> var1 = (java.util.Map<String,String>) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setParasMap(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setParasMap(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::getParas", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getParas(" + "" + ")");
                }
            
                // invoke native method
                byte[] __result__;
                try {
                    __result__ = ref.getParas();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                byte[] jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setRequestProperty", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setRequestProperty(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRequestProperty(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::getRequestProperty", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getRequestProperty(" + var1 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getRequestProperty(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setUserAgent", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setUserAgent(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setUserAgent(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::getRequestProperties", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getRequestProperties(" + "" + ")");
                }
            
                // invoke native method
                java.util.Map<String,String> __result__;
                try {
                    __result__ = ref.getRequestProperties();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.util.Map<String,String> jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setRequestProperties", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.util.Map<String,String> var1 = (java.util.Map<String,String>) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setRequestProperties(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRequestProperties(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::isHaveRspData", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isHaveRspData(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isHaveRspData();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setHaveRspData", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setHaveRspData(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setHaveRspData(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::isRspDatazip", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isRspDatazip(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isRspDatazip();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpRequest::setRspDatazip", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setRspDatazip(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRspDatazip(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::httpGet__android_content_Context__cn_jiguang_net_HttpRequest", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                cn.jiguang.net.HttpRequest var1 = __var1RefId__ != null ? (cn.jiguang.net.HttpRequest) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpGet(" + var0 + var1 + ")");
                }
            
                // invoke native method
                cn.jiguang.net.HttpResponse __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.httpGet(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::httpGet__android_content_Context__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpGet(" + var0 + var1 + ")");
                }
            
                // invoke native method
                cn.jiguang.net.HttpResponse __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.httpGet(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::httpGetString__android_content_Context__cn_jiguang_net_HttpRequest", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                cn.jiguang.net.HttpRequest var1 = __var1RefId__ != null ? (cn.jiguang.net.HttpRequest) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpGetString(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.httpGetString(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::httpGetString__android_content_Context__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpGetString(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.httpGetString(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::httpPost__android_content_Context__cn_jiguang_net_HttpRequest", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                cn.jiguang.net.HttpRequest var1 = __var1RefId__ != null ? (cn.jiguang.net.HttpRequest) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpPost(" + var0 + var1 + ")");
                }
            
                // invoke native method
                cn.jiguang.net.HttpResponse __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.httpPost(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::httpPost__android_content_Context__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpPost(" + var0 + var1 + ")");
                }
            
                // invoke native method
                cn.jiguang.net.HttpResponse __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.httpPost(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::httpPostString__android_content_Context__String", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpPostString(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.httpPostString(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::httpPostString__android_content_Context__String__Map_String_String_", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                java.util.Map<String,String> var2 = (java.util.Map<String,String>) ((Map<String, Object>) __args__).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpPostString(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.httpPostString(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::getUrlWithParas", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // jsonable arg
                java.util.Map<String,String> var1 = (java.util.Map<String,String>) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::getUrlWithParas(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.getUrlWithParas(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::getUrlWithValueEncodeParas", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // jsonable arg
                java.util.Map<String,String> var1 = (java.util.Map<String,String>) ((Map<String, Object>) __args__).get("var1");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::getUrlWithValueEncodeParas(" + var0 + var1 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.getUrlWithValueEncodeParas(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::joinParas", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.util.Map<String,String> var0 = (java.util.Map<String,String>) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::joinParas(" + var0 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.joinParas(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::joinParasWithEncodedValue", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.util.Map<String,String> var0 = (java.util.Map<String,String>) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::joinParasWithEncodedValue(" + var0 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.joinParasWithEncodedValue(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::appendParaToUrl", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::appendParaToUrl(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.appendParaToUrl(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpUtils::parseGmtTime", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var0 = (String) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::parseGmtTime(" + var0 + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = cn.jiguang.net.HttpUtils.parseGmtTime(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::getUrl", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getUrl(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getUrl();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::setUrl", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setUrl(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setUrl(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::getResponseBody", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getResponseBody(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getResponseBody();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::setResponseBody", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setResponseBody(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setResponseBody(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::getResponseCode", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getResponseCode(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getResponseCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::setResponseCode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setResponseCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setResponseCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::setResponseHeaders", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.util.Map<String,java.lang.Object> var1 = (java.util.Map<String,java.lang.Object>) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setResponseHeaders(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setResponseHeaders(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::getType", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getType(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::setType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::setExpiredTime", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setExpiredTime(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setExpiredTime(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::getExpiredTime", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getExpiredTime(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getExpiredTime();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::isExpired", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::isExpired(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isExpired();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::isInCache", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::isInCache(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isInCache();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::setInCache", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setInCache(" + var1 + ")");
                }
            
                // invoke native method
                cn.jiguang.net.HttpResponse __result__;
                try {
                    __result__ = ref.setInCache(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::getExpiresHeader", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getExpiresHeader(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getExpiresHeader();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.net.HttpResponse::setResponseHeader", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setResponseHeader(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setResponseHeader(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JConstants::isTestEnv", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::isTestEnv(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = cn.jiguang.internal.JConstants.isTestEnv();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JConstants::setTestEnv", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var0 = (boolean) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::setTestEnv(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    cn.jiguang.internal.JConstants.setTestEnv(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JConstants::testAndroidQ", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::testAndroidQ(" + "" + ")");
                }
            
                // invoke native method
                try {
                    cn.jiguang.internal.JConstants.testAndroidQ();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JConstants::isAndroidQ", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::isAndroidQ(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = cn.jiguang.internal.JConstants.isAndroidQ(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JConstants::getAppContext", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::getAppContext(" + var0 + ")");
                }
            
                // invoke native method
                android.content.Context __result__;
                try {
                    __result__ = cn.jiguang.internal.JConstants.getAppContext(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JCoreHelperAction::onEvent", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) __args__).get("var4");
                // ref arg
                Integer __var5RefId__ = (Integer) ((Map<String, Object>) __args__).get("var5");
                android.os.Bundle var5 = __var5RefId__ != null ? (android.os.Bundle) getHEAP().get(__var5RefId__) : null;
                // jsonable arg
                java.lang.Object var6 = (java.lang.Object) ((Map<String, Object>) __args__).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.JCoreHelperAction ref = (cn.jiguang.internal.JCoreHelperAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreHelperAction@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.onEvent(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JCoreHelperAction::directHandle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                // ref arg
                Integer __var4RefId__ = (Integer) ((Map<String, Object>) __args__).get("var4");
                android.os.Bundle var4 = __var4RefId__ != null ? (android.os.Bundle) getHEAP().get(__var4RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.JCoreHelperAction ref = (cn.jiguang.internal.JCoreHelperAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreHelperAction@" + refId + "::directHandle(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                android.os.Bundle __result__;
                try {
                    __result__ = ref.directHandle(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JCoreHelperAction::onCommonMethod", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                java.lang.Object var3 = (java.lang.Object) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.JCoreHelperAction ref = (cn.jiguang.internal.JCoreHelperAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreHelperAction@" + refId + "::onCommonMethod(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.onCommonMethod(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JCoreInternalHelper::getInstance", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreInternalHelper::getInstance(" + "" + ")");
                }
            
                // invoke native method
                cn.jiguang.internal.JCoreInternalHelper __result__;
                try {
                    __result__ = cn.jiguang.internal.JCoreInternalHelper.getInstance();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JCoreInternalHelper::initLoad", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.JCoreInternalHelper ref = (cn.jiguang.internal.JCoreInternalHelper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreInternalHelper@" + refId + "::initLoad(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.initLoad(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JCoreInternalHelper::onEvent", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                boolean var4 = (boolean) ((Map<String, Object>) __args__).get("var4");
                // jsonable arg
                String var5 = (String) ((Map<String, Object>) __args__).get("var5");
                // ref arg
                Integer __var6RefId__ = (Integer) ((Map<String, Object>) __args__).get("var6");
                android.os.Bundle var6 = __var6RefId__ != null ? (android.os.Bundle) getHEAP().get(__var6RefId__) : null;
                // jsonable arg
                java.lang.Object var7 = (java.lang.Object) ((Map<String, Object>) __args__).get("var7");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.JCoreInternalHelper ref = (cn.jiguang.internal.JCoreInternalHelper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreInternalHelper@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.onEvent(var1, var2, var3, var4, var5, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JCoreInternalHelper::directHandle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                // ref arg
                Integer __var4RefId__ = (Integer) ((Map<String, Object>) __args__).get("var4");
                android.os.Bundle var4 = __var4RefId__ != null ? (android.os.Bundle) getHEAP().get(__var4RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.JCoreInternalHelper ref = (cn.jiguang.internal.JCoreInternalHelper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreInternalHelper@" + refId + "::directHandle(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                android.os.Bundle __result__;
                try {
                    __result__ = ref.directHandle(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.JCoreInternalHelper::commonMethod", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                java.lang.Object var3 = (java.lang.Object) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.JCoreInternalHelper ref = (cn.jiguang.internal.JCoreInternalHelper) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreInternalHelper@" + refId + "::commonMethod(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.commonMethod(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.ActionManager::getInstance", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.ActionManager::getInstance(" + "" + ")");
                }
            
                // invoke native method
                cn.jiguang.internal.ActionManager __result__;
                try {
                    __result__ = cn.jiguang.internal.ActionManager.getInstance();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.ActionManager::getActionMap", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.ActionManager::getActionMap(" + "" + ")");
                }
            
                // invoke native method
                java.util.HashMap<String,String> __result__;
                try {
                    __result__ = cn.jiguang.internal.ActionManager.getActionMap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.util.HashMap<String,String> jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.ActionManager::addAction", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.ActionManager ref = (cn.jiguang.internal.ActionManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.ActionManager@" + refId + "::addAction(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.addAction(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.internal.ActionManager::handleMessage", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                java.lang.Object var3 = (java.lang.Object) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.internal.ActionManager ref = (cn.jiguang.internal.ActionManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.ActionManager@" + refId + "::handleMessage(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.handleMessage(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.android.IDataShare::onAction", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // ref arg
                Integer __var3RefId__ = (Integer) ((Map<String, Object>) __args__).get("var3");
                android.os.Bundle var3 = __var3RefId__ != null ? (android.os.Bundle) getHEAP().get(__var3RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.android.IDataShare ref = (cn.jiguang.android.IDataShare) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.android.IDataShare@" + refId + "::onAction(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.onAction(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.android.IDataShare::execute", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // ref arg
                Integer __var3RefId__ = (Integer) ((Map<String, Object>) __args__).get("var3");
                android.os.Bundle var3 = __var3RefId__ != null ? (android.os.Bundle) getHEAP().get(__var3RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.android.IDataShare ref = (cn.jiguang.android.IDataShare) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.android.IDataShare@" + refId + "::execute(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                android.os.Bundle __result__;
                try {
                    __result__ = ref.execute(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.dy.Protocol::d", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) __args__).get("var0");
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                java.lang.Object var2 = (java.lang.Object) ((Map<String, Object>) __args__).get("var2");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.dy.Protocol::d(" + var0 + var1 + var2 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = cn.jiguang.dy.Protocol.d(var0, var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.dy.Protocol::bf", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.dy.Protocol::bf(" + "" + ")");
                }
            
                // invoke native method
                cn.jiguang.dy.Protocol __result__;
                try {
                    __result__ = cn.jiguang.dy.Protocol.bf();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.dy.Protocol::c", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.dy.Protocol ref = (cn.jiguang.dy.Protocol) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.dy.Protocol@" + refId + "::c(" + var1 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.c(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.dy.Protocol::e", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.dy.Protocol::e(" + var0 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = cn.jiguang.dy.Protocol.e(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::isSupportedCMD", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::isSupportedCMD(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isSupportedCMD(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::onActionRun", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
                // ref arg
                Integer __var4RefId__ = (Integer) ((Map<String, Object>) __args__).get("var4");
                android.os.Bundle var4 = __var4RefId__ != null ? (android.os.Bundle) getHEAP().get(__var4RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::onActionRun(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                try {
                    ref.onActionRun(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::onEvent", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
                // jsonable arg
                String var5 = (String) ((Map<String, Object>) __args__).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + var5 + ")");
                }
            
                // invoke native method
                try {
                    ref.onEvent(var1, var2, var3, var4, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::handleMessage", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                java.lang.Object var3 = (java.lang.Object) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::handleMessage(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.handleMessage(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::getSdkVersion", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::getSdkVersion(" + var1 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getSdkVersion(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::getReportVersionKey", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::getReportVersionKey(" + var1 + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getReportVersionKey(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::dispatchTimeOutMessage", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                long var3 = (long) (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) __args__).get("var5");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::dispatchTimeOutMessage(" + var1 + var2 + var3 + var5 + ")");
                }
            
                // invoke native method
                try {
                    ref.dispatchTimeOutMessage(var1, var2, var3, var5);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::checkAction", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::checkAction(" + var1 + var2 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.checkAction(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::beforRegister", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) __args__).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::beforRegister(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.beforRegister(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::beforLogin", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                String var4 = (String) ((Map<String, Object>) __args__).get("var4");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::beforLogin(" + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.beforLogin(var1, var2, var3, var4);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::onSendData", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                String var2 = (String) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                long var3 = (long) (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) __args__).get("var5");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) __args__).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::onSendData(" + var1 + var2 + var3 + var5 + var6 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.onSendData(var1, var2, var3, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JDispatchAction::getPInfo", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::getPInfo(" + var1 + ")");
                }
            
                // invoke native method
                android.os.Bundle __result__;
                try {
                    __result__ = ref.getPInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JActionExtra::checkAction", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JActionExtra ref = (cn.jiguang.api.JActionExtra) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JActionExtra@" + refId + "::checkAction(" + var1 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.checkAction(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JActionExtra::beforRegister", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JActionExtra ref = (cn.jiguang.api.JActionExtra) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JActionExtra@" + refId + "::beforRegister(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.beforRegister(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JActionExtra::beforLogin", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                String var3 = (String) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JActionExtra ref = (cn.jiguang.api.JActionExtra) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JActionExtra@" + refId + "::beforLogin(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.beforLogin(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.JActionExtra::onSendData", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                long var2 = (long) (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                long var4 = (long) (int) ((Map<String, Object>) __args__).get("var4");
                // jsonable arg
                int var6 = (int) ((Map<String, Object>) __args__).get("var6");
                // jsonable arg
                int var7 = (int) ((Map<String, Object>) __args__).get("var7");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.JActionExtra ref = (cn.jiguang.api.JActionExtra) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JActionExtra@" + refId + "::onSendData(" + var1 + var2 + var4 + var6 + var7 + ")");
                }
            
                // invoke native method
                java.lang.Object __result__;
                try {
                    __result__ = ref.onSendData(var1, var2, var4, var6, var7);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                java.lang.Object jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::current", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::current(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.current();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::jump", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::jump(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.jump(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::save", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::save(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.save();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::restore", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::restore(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.restore();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeU8", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU8(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeU8(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeU8At", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU8At(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeU8At(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeU16", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU16(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeU16(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeU16At", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU16At(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeU16At(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeU32", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU32(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeU32(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeU32At", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU32At(" + var1 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeU32At(var1, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::encodeZigZag32", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var0 = (int) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil::encodeZigZag32(" + var0 + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = cn.jiguang.api.utils.OutputDataUtil.encodeZigZag32(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::encodeZigZag64", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var0 = (long) (int) ((Map<String, Object>) __args__).get("var0");
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil::encodeZigZag64(" + var0 + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = cn.jiguang.api.utils.OutputDataUtil.encodeZigZag64(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeU64", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU64(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeU64(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeU64At", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU64At(" + var1 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeU64At(var1, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeRawLittleEndian16", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeRawLittleEndian16(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeRawLittleEndian16(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeRawLittleEndian32", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeRawLittleEndian32(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeRawLittleEndian32(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeRawLittleEndian64", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                long var1 = (long) (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeRawLittleEndian64(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeRawLittleEndian64(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeByteArray__Uint8List__int__int", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeByteArray(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeByteArray(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("cn.jiguang.api.utils.OutputDataUtil::writeByteArrayincludeLength", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                byte[] var1 = (byte[]) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeByteArrayincludeLength(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.writeByteArrayincludeLength(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
        }};
    }
}
