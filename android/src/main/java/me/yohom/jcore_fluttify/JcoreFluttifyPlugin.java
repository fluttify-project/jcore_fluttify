//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.jcore_fluttify;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import androidx.annotation.NonNull;

// todo 启用新的embedding
@SuppressWarnings("ALL")
public class JcoreFluttifyPlugin implements MethodChannel.MethodCallHandler {

    private JcoreFluttifyPlugin(Registrar registrar) {
        this.registrar = registrar;
    }

    private Registrar registrar;

    private final Map<String, Handler> handlerMap = new HashMap<String, Handler>() {{
        // getter
        put("cn.jiguang.api.JResponse::get_code", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            cn.jiguang.api.JResponse ref = (cn.jiguang.api.JResponse) getHEAP().get(refId);
        
            int result = ref.code;
        
        
        
            methodResult.success(result);
        });
        // setter
        put("cn.jiguang.api.JResponse::set_code", (args, methodResult) -> {
            // jsonable arg
            int code = (int) args.get("code");
        
            int refId = (int) args.get("refId");
            cn.jiguang.api.JResponse ref = (cn.jiguang.api.JResponse) getHEAP().get(refId);
        
            ref.code = code;
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::getUrl", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getUrl(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getUrl();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::getConnectTimeout", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getConnectTimeout(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getConnectTimeout();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setConnectTimeout", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setConnectTimeout(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setConnectTimeout(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::getReadTimeout", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getReadTimeout(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getReadTimeout();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setReadTimeout", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setReadTimeout(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setReadTimeout(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::setUrl", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setUrl(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::isDoOutPut", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isDoOutPut(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isDoOutPut();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setDoOutPut", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setDoOutPut(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDoOutPut(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::isDoInPut", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isDoInPut(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isDoInPut();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setDoInPut", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setDoInPut(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDoInPut(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::isUseCaches", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isUseCaches(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isUseCaches();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setUseCaches", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setUseCaches(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUseCaches(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::isNeedErrorInput", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isNeedErrorInput(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isNeedErrorInput();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setNeedErrorInput", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setNeedErrorInput(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNeedErrorInput(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::setSslTrustManager", (args, methodResult) -> {
            // args
            // ref arg
            cn.jiguang.net.SSLTrustManager var1 = (cn.jiguang.net.SSLTrustManager) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setSslTrustManager(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSslTrustManager(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::isNeedRetryIfHttpsFailed", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isNeedRetryIfHttpsFailed(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isNeedRetryIfHttpsFailed();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setNeedRetryIfHttpsFailed", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setNeedRetryIfHttpsFailed(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNeedRetryIfHttpsFailed(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::getParas", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getParas(" + "" + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = ref.getParas();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setRequestProperty", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setRequestProperty(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.setRequestProperty(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::getRequestProperty", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::getRequestProperty(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getRequestProperty(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setUserAgent", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setUserAgent(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUserAgent(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::isHaveRspData", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isHaveRspData(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isHaveRspData();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setHaveRspData", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setHaveRspData(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setHaveRspData(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpRequest::isRspDatazip", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::isRspDatazip(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isRspDatazip();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpRequest::setRspDatazip", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpRequest ref = (cn.jiguang.net.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpRequest@" + refId + "::setRspDatazip(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRspDatazip(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpUtils::httpGet__android_content_Context__cn_jiguang_net_HttpRequest", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // ref arg
            cn.jiguang.net.HttpRequest var1 = (cn.jiguang.net.HttpRequest) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpGet(" + var0 + var1 + ")");
            }
        
            // invoke native method
            cn.jiguang.net.HttpResponse result;
            try {
                result = cn.jiguang.net.HttpUtils.httpGet(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.net.HttpUtils::httpGet__android_content_Context__String", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpGet(" + var0 + var1 + ")");
            }
        
            // invoke native method
            cn.jiguang.net.HttpResponse result;
            try {
                result = cn.jiguang.net.HttpUtils.httpGet(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.net.HttpUtils::httpGetString__android_content_Context__cn_jiguang_net_HttpRequest", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // ref arg
            cn.jiguang.net.HttpRequest var1 = (cn.jiguang.net.HttpRequest) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpGetString(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.net.HttpUtils.httpGetString(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpUtils::httpGetString__android_content_Context__String", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpGetString(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.net.HttpUtils.httpGetString(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpUtils::httpPost__android_content_Context__cn_jiguang_net_HttpRequest", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // ref arg
            cn.jiguang.net.HttpRequest var1 = (cn.jiguang.net.HttpRequest) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpPost(" + var0 + var1 + ")");
            }
        
            // invoke native method
            cn.jiguang.net.HttpResponse result;
            try {
                result = cn.jiguang.net.HttpUtils.httpPost(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.net.HttpUtils::httpPost__android_content_Context__String", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpPost(" + var0 + var1 + ")");
            }
        
            // invoke native method
            cn.jiguang.net.HttpResponse result;
            try {
                result = cn.jiguang.net.HttpUtils.httpPost(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.net.HttpUtils::httpPostString__android_content_Context__String", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::httpPostString(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.net.HttpUtils.httpPostString(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpUtils::appendParaToUrl", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::appendParaToUrl(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.net.HttpUtils.appendParaToUrl(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpUtils::parseGmtTime", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpUtils::parseGmtTime(" + var0 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = cn.jiguang.net.HttpUtils.parseGmtTime(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::getUrl", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getUrl(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getUrl();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::setUrl", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setUrl(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpResponse::getResponseBody", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getResponseBody(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResponseBody();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::setResponseBody", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setResponseBody(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setResponseBody(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpResponse::getResponseCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getResponseCode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getResponseCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::setResponseCode", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setResponseCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setResponseCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpResponse::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::setType", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpResponse::setExpiredTime", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setExpiredTime(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setExpiredTime(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.net.HttpResponse::getExpiredTime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getExpiredTime(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getExpiredTime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::isExpired", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::isExpired(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isExpired();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::isInCache", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::isInCache(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isInCache();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::setInCache", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setInCache(" + var1 + ")");
            }
        
            // invoke native method
            cn.jiguang.net.HttpResponse result;
            try {
                result = ref.setInCache(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.net.HttpResponse::getExpiresHeader", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::getExpiresHeader(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getExpiresHeader();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.net.HttpResponse::setResponseHeader", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.net.HttpResponse ref = (cn.jiguang.net.HttpResponse) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.net.HttpResponse@" + refId + "::setResponseHeader(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.setResponseHeader(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.internal.JConstants::isTestEnv", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::isTestEnv(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.internal.JConstants.isTestEnv();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.internal.JConstants::setTestEnv", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::setTestEnv(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.internal.JConstants.setTestEnv(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.internal.JConstants::testAndroidQ", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::testAndroidQ(" + "" + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.internal.JConstants.testAndroidQ();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.internal.JConstants::isAndroidQ", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::isAndroidQ(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.internal.JConstants.isAndroidQ(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.internal.JConstants::getAppContext", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JConstants::getAppContext(" + var0 + ")");
            }
        
            // invoke native method
            android.content.Context result;
            try {
                result = cn.jiguang.internal.JConstants.getAppContext(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.internal.JCoreHelperAction::directHandle", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.internal.JCoreHelperAction ref = (cn.jiguang.internal.JCoreHelperAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreHelperAction@" + refId + "::directHandle(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            android.os.Bundle result;
            try {
                result = ref.directHandle(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.internal.JCoreInternalHelper::getInstance", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreInternalHelper::getInstance(" + "" + ")");
            }
        
            // invoke native method
            cn.jiguang.internal.JCoreInternalHelper result;
            try {
                result = cn.jiguang.internal.JCoreInternalHelper.getInstance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.internal.JCoreInternalHelper::initLoad", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.internal.JCoreInternalHelper ref = (cn.jiguang.internal.JCoreInternalHelper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreInternalHelper@" + refId + "::initLoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.initLoad(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.internal.JCoreInternalHelper::directHandle", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.internal.JCoreInternalHelper ref = (cn.jiguang.internal.JCoreInternalHelper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.JCoreInternalHelper@" + refId + "::directHandle(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            android.os.Bundle result;
            try {
                result = ref.directHandle(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.internal.ActionManager::getInstance", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.ActionManager::getInstance(" + "" + ")");
            }
        
            // invoke native method
            cn.jiguang.internal.ActionManager result;
            try {
                result = cn.jiguang.internal.ActionManager.getInstance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.internal.ActionManager::addAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.internal.ActionManager ref = (cn.jiguang.internal.ActionManager) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.internal.ActionManager@" + refId + "::addAction(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.addAction(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.android.IDataShare::onAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            android.os.Bundle var3 = (android.os.Bundle) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.android.IDataShare ref = (cn.jiguang.android.IDataShare) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.android.IDataShare@" + refId + "::onAction(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.onAction(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.android.IDataShare::execute", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            android.os.Bundle var3 = (android.os.Bundle) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.android.IDataShare ref = (cn.jiguang.android.IDataShare) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.android.IDataShare@" + refId + "::execute(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            android.os.Bundle result;
            try {
                result = ref.execute(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.android.IDataShare::bind", (args, methodResult) -> {
            // args
            // ref arg
            cn.jiguang.android.IDataShare var1 = (cn.jiguang.android.IDataShare) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.android.IDataShare ref = (cn.jiguang.android.IDataShare) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.android.IDataShare@" + refId + "::bind(" + var1 + var2 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.bind(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JDispatchAction::isSupportedCMD", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::isSupportedCMD(" + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isSupportedCMD(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JDispatchAction::onActionRun", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::onActionRun(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onActionRun(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JDispatchAction::onEvent", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
            // jsonable arg
            String var5 = (String) args.get("var5");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JDispatchAction::getSdkVersion", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::getSdkVersion(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSdkVersion(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JDispatchAction::getReportVersionKey", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::getReportVersionKey(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getReportVersionKey(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JDispatchAction::dispatchTimeOutMessage", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            long var3 = (long) args.get("var3");
            // jsonable arg
            int var5 = (int) args.get("var5");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::dispatchTimeOutMessage(" + var1 + var2 + var3 + var5 + ")");
            }
        
            // invoke native method
            try {
                ref.dispatchTimeOutMessage(var1, var2, var3, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JDispatchAction::checkAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::checkAction(" + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.checkAction(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JDispatchAction::getPInfo", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JDispatchAction ref = (cn.jiguang.api.JDispatchAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JDispatchAction@" + refId + "::getPInfo(" + var1 + ")");
            }
        
            // invoke native method
            android.os.Bundle result;
            try {
                result = ref.getPInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.api.JActionExtra::checkAction", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JActionExtra ref = (cn.jiguang.api.JActionExtra) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JActionExtra@" + refId + "::checkAction(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.checkAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JAction::isSupportedCMD", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JAction ref = (cn.jiguang.api.JAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JAction@" + refId + "::isSupportedCMD(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isSupportedCMD(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JAction::onEvent", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            long var2 = (long) args.get("var2");
            // jsonable arg
            int var4 = (int) args.get("var4");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JAction ref = (cn.jiguang.api.JAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JAction@" + refId + "::onEvent(" + var1 + var2 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JAction::getSdkVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JAction ref = (cn.jiguang.api.JAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JAction@" + refId + "::getSdkVersion(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSdkVersion();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JAction::dispatchTimeOutMessage", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            long var2 = (long) args.get("var2");
            // jsonable arg
            long var4 = (long) args.get("var4");
            // jsonable arg
            int var6 = (int) args.get("var6");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JAction ref = (cn.jiguang.api.JAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JAction@" + refId + "::dispatchTimeOutMessage(" + var1 + var2 + var4 + var6 + ")");
            }
        
            // invoke native method
            try {
                ref.dispatchTimeOutMessage(var1, var2, var4, var6);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::current", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::current(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.current();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::jump", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::jump(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.jump(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::save", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::save(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.save();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::restore", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::restore(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.restore();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeU8", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU8(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeU8(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeU8At", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU8At(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.writeU8At(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeU16", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU16(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeU16(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeU16At", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU16At(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.writeU16At(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeU32", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU32(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeU32(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeU32At", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU32At(" + var1 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.writeU32At(var1, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::encodeZigZag32", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil::encodeZigZag32(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = cn.jiguang.api.utils.OutputDataUtil.encodeZigZag32(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::encodeZigZag64", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil::encodeZigZag64(" + var0 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = cn.jiguang.api.utils.OutputDataUtil.encodeZigZag64(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeU64", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU64(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeU64(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeU64At", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeU64At(" + var1 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.writeU64At(var1, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeRawLittleEndian16", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeRawLittleEndian16(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeRawLittleEndian16(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeRawLittleEndian32", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeRawLittleEndian32(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeRawLittleEndian32(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeRawLittleEndian64", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeRawLittleEndian64(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeRawLittleEndian64(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeByteArray__Uint8List__int__int", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeByteArray(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.writeByteArray(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeByteArrayincludeLength", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeByteArrayincludeLength(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeByteArrayincludeLength(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeByteArray__Uint8List", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeByteArray(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeByteArray(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::writeCountedString", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::writeCountedString(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.writeCountedString(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.OutputDataUtil::toByteArray", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.utils.OutputDataUtil ref = (cn.jiguang.api.utils.OutputDataUtil) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.OutputDataUtil@" + refId + "::toByteArray(" + "" + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = ref.toByteArray();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.utils.ProtocolUtil::tlv2ToByteArray", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.ProtocolUtil::tlv2ToByteArray(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = cn.jiguang.api.utils.ProtocolUtil.tlv2ToByteArray(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.utils.ProtocolUtil::fixedStringToBytes", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.ProtocolUtil::fixedStringToBytes(" + var0 + var1 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = cn.jiguang.api.utils.ProtocolUtil.fixedStringToBytes(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.utils.ProtocolUtil::fillIntData", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.ProtocolUtil::fillIntData(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.utils.ProtocolUtil.fillIntData(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.ProtocolUtil::fillStringData", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.ProtocolUtil::fillStringData(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.utils.ProtocolUtil.fillStringData(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.utils.ProtocolUtil::getDefaultByte", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.ProtocolUtil::getDefaultByte(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = cn.jiguang.api.utils.ProtocolUtil.getDefaultByte(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.utils.ProtocolUtil::int2ByteArray", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.ProtocolUtil::int2ByteArray(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = cn.jiguang.api.utils.ProtocolUtil.int2ByteArray(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.utils.ProtocolUtil::long2ByteArray", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.utils.ProtocolUtil::long2ByteArray(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = cn.jiguang.api.utils.ProtocolUtil.long2ByteArray(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JRequest::setSid", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JRequest ref = (cn.jiguang.api.JRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JRequest@" + refId + "::setSid(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSid(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JRequest::setJuid", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JRequest ref = (cn.jiguang.api.JRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JRequest@" + refId + "::setJuid(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setJuid(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JAnalyticsAction::dispatchResume", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JAnalyticsAction ref = (cn.jiguang.api.JAnalyticsAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JAnalyticsAction@" + refId + "::dispatchResume(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.dispatchResume(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JAnalyticsAction::dispatchPause", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JAnalyticsAction ref = (cn.jiguang.api.JAnalyticsAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JAnalyticsAction@" + refId + "::dispatchPause(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.dispatchPause(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JAnalyticsAction::dispatchStatus", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JAnalyticsAction ref = (cn.jiguang.api.JAnalyticsAction) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JAnalyticsAction@" + refId + "::dispatchStatus(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.dispatchStatus(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::init", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::init(" + var0 + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreInterface.init(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::register", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::register(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.register(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::sendData", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::sendData(" + var0 + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.sendData(var0, var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::sendRequestData", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::sendRequestData(" + var0 + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.sendRequestData(var0, var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::sendAction", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) args.get("var2"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::sendAction(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.sendAction(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::stop", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) args.get("var2"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::stop(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.stop(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::restart", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) args.get("var2"));
            // jsonable arg
            boolean var3 = (boolean) args.get("var3");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::restart(" + var0 + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.restart(var0, var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getDeviceId", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getDeviceId(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.JCoreInterface.getDeviceId(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::canCallDirect", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::canCallDirect(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreInterface.canCallDirect();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setDebugMode", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setDebugMode(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setDebugMode(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getDebugMode", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getDebugMode(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreInterface.getDebugMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::putSingleExecutor", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::putSingleExecutor(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.putSingleExecutor(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setAnalysisAction", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setAnalysisAction(" + "" + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setAnalysisAction(new cn.jiguang.api.JAnalyticsAction() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(registrar.messenger(), "cn.jiguang.api.JCoreInterface::setAnalysisAction::Callback");
        
                // call dart method
                @Override
                public void dispatchResume(android.content.Context var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: dispatchResume(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::cn.jiguang.api.JAnalyticsAction::dispatchResume",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void dispatchPause(android.content.Context var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: dispatchPause(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::cn.jiguang.api.JAnalyticsAction::dispatchPause",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void dispatchStatus(android.content.Context var1, String var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: dispatchStatus(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    String argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::cn.jiguang.api.JAnalyticsAction::dispatchStatus",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getRegistrationID", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getRegistrationID(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.JCoreInterface.getRegistrationID(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::isValidRegistered", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::isValidRegistered(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreInterface.isValidRegistered();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getAppKey", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getAppKey(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.JCoreInterface.getAppKey();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getReportTime", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getReportTime(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = cn.jiguang.api.JCoreInterface.getReportTime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getUid", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getUid(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = cn.jiguang.api.JCoreInterface.getUid();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getSid", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getSid(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = cn.jiguang.api.JCoreInterface.getSid();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getNextRid", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getNextRid(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = cn.jiguang.api.JCoreInterface.getNextRid();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::isTcpConnected", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::isTcpConnected(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreInterface.isTcpConnected();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getConnectionState", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getConnectionState(" + var0 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreInterface.getConnectionState(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getChannel", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getChannel(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.JCoreInterface.getChannel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getHttpConfig", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getHttpConfig(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.JCoreInterface.getHttpConfig(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getRuningFlag", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getRuningFlag(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreInterface.getRuningFlag();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setImLBSEnable", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setImLBSEnable(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setImLBSEnable(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::onResume", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::onResume(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.onResume(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::onPause", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::onPause(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.onPause(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::onFragmentResume", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::onFragmentResume(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.onFragmentResume(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::onFragmentPause", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::onFragmentPause(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.onFragmentPause(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::onKillProcess", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::onKillProcess(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.onKillProcess(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::initCrashHandler", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::initCrashHandler(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.initCrashHandler(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::stopCrashHandler", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::stopCrashHandler(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.stopCrashHandler(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::requestPermission", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::requestPermission(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.requestPermission(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setCanLaunchedStoppedService", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setCanLaunchedStoppedService(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setCanLaunchedStoppedService(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setTestConn", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setTestConn(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setTestConn(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setTestConnIPPort", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setTestConnIPPort(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setTestConnIPPort(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getJCoreSDKVersionInt", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getJCoreSDKVersionInt(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = cn.jiguang.api.JCoreInterface.getJCoreSDKVersionInt();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::processCtrlReport", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::processCtrlReport(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.processCtrlReport(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setDaemonAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setDaemonAction(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setDaemonAction(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getDaemonAction", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getDaemonAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.JCoreInterface.getDaemonAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setLocationReportDelay", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setLocationReportDelay(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setLocationReportDelay(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setPowerSaveMode", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setPowerSaveMode(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setPowerSaveMode(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::testCountryCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::testCountryCode(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.testCountryCode(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::setAccountId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::setAccountId(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.setAccountId(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getAccountId", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getAccountId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.JCoreInterface.getAccountId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::getCommonConfigAppkey", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::getCommonConfigAppkey(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.JCoreInterface.getCommonConfigAppkey();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreInterface::triggerSceneCheck", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreInterface::triggerSceneCheck(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreInterface.triggerSceneCheck(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::init", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::init(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.init(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::changeLiveStatus", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::changeLiveStatus(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.changeLiveStatus(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::setLBSEnable", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::setLBSEnable(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.setLBSEnable(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::setDebugMode", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::setDebugMode(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.setDebugMode(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::getDebugMode", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::getDebugMode(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreManager.getDebugMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreManager::isInternal", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::isInternal(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreManager.isInternal();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreManager::addDispatchAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::addDispatchAction(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.addDispatchAction(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::setAnalysisAction", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::setAnalysisAction(" + "" + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.setAnalysisAction(new cn.jiguang.api.JAnalyticsAction() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(registrar.messenger(), "cn.jiguang.api.JCoreManager::setAnalysisAction::Callback");
        
                // call dart method
                @Override
                public void dispatchResume(android.content.Context var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: dispatchResume(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::cn.jiguang.api.JAnalyticsAction::dispatchResume",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void dispatchPause(android.content.Context var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: dispatchPause(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::cn.jiguang.api.JAnalyticsAction::dispatchPause",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void dispatchStatus(android.content.Context var1, String var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: dispatchStatus(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    String argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::cn.jiguang.api.JAnalyticsAction::dispatchStatus",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::requestPermission", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::requestPermission(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.requestPermission(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::initCrashHandler", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::initCrashHandler(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.initCrashHandler(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::stopCrashHandler", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::stopCrashHandler(" + var0 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.stopCrashHandler(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::isTestEnv", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::isTestEnv(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.JCoreManager.isTestEnv();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JCoreManager::setSDKConfigs", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // ref arg
            android.os.Bundle var1 = (android.os.Bundle) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::setSDKConfigs(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.JCoreManager.setSDKConfigs(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JCoreManager::getAppContext", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JCoreManager::getAppContext(" + var0 + ")");
            }
        
            // invoke native method
            android.content.Context result;
            try {
                result = cn.jiguang.api.JCoreManager.getAppContext(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.api.ReportCallBack::onFinish", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.ReportCallBack ref = (cn.jiguang.api.ReportCallBack) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.ReportCallBack@" + refId + "::onFinish(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onFinish(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.BaseLogger::getCommonTag", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.BaseLogger ref = (cn.jiguang.api.BaseLogger) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.BaseLogger@" + refId + "::getCommonTag(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCommonTag();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.BaseLogger::flushCached2File", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.BaseLogger::flushCached2File(" + "" + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.BaseLogger.flushCached2File();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.JProtocol::getCommand", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JProtocol ref = (cn.jiguang.api.JProtocol) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JProtocol@" + refId + "::getCommand(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getCommand();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JProtocol::getRid", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JProtocol ref = (cn.jiguang.api.JProtocol) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JProtocol@" + refId + "::getRid(" + "" + ")");
            }
        
            // invoke native method
            Long result;
            try {
                result = ref.getRid();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JProtocol::getJuid", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JProtocol ref = (cn.jiguang.api.JProtocol) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JProtocol@" + refId + "::getJuid(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getJuid();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JProtocol::getSid", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JProtocol ref = (cn.jiguang.api.JProtocol) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JProtocol@" + refId + "::getSid(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getSid();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JProtocol::getVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JProtocol ref = (cn.jiguang.api.JProtocol) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JProtocol@" + refId + "::getVersion(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getVersion();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JProtocol::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JProtocol ref = (cn.jiguang.api.JProtocol) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JProtocol@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.JProtocol::writeBodyAndToBytes", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.api.JProtocol ref = (cn.jiguang.api.JProtocol) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.JProtocol@" + refId + "::writeBodyAndToBytes(" + "" + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = ref.writeBodyAndToBytes();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.MultiSpHelper::commitString", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.MultiSpHelper::commitString(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.MultiSpHelper.commitString(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.MultiSpHelper::getString", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.MultiSpHelper::getString(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = cn.jiguang.api.MultiSpHelper.getString(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.MultiSpHelper::commitLong", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            long var2 = (long) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.MultiSpHelper::commitLong(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.MultiSpHelper.commitLong(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.MultiSpHelper::getLong", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            long var2 = (long) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.MultiSpHelper::getLong(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = cn.jiguang.api.MultiSpHelper.getLong(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.MultiSpHelper::commitInt", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.MultiSpHelper::commitInt(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.MultiSpHelper.commitInt(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.MultiSpHelper::getInt", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.MultiSpHelper::getInt(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = cn.jiguang.api.MultiSpHelper.getInt(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.api.MultiSpHelper::commitBoolean", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.MultiSpHelper::commitBoolean(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                cn.jiguang.api.MultiSpHelper.commitBoolean(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.api.MultiSpHelper::getBoolean", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.api.MultiSpHelper::getBoolean(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jiguang.api.MultiSpHelper.getBoolean(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.analytics.page.ActivityLifecycle::onActivityCreated", (args, methodResult) -> {
            // args
            // ref arg
            android.app.Activity var1 = (android.app.Activity) getHEAP().get((int) args.get("var1"));
            // ref arg
            android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.ActivityLifecycle ref = (cn.jiguang.analytics.page.ActivityLifecycle) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.ActivityLifecycle@" + refId + "::onActivityCreated(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onActivityCreated(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.ActivityLifecycle::onActivityStarted", (args, methodResult) -> {
            // args
            // ref arg
            android.app.Activity var1 = (android.app.Activity) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.ActivityLifecycle ref = (cn.jiguang.analytics.page.ActivityLifecycle) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.ActivityLifecycle@" + refId + "::onActivityStarted(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onActivityStarted(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.ActivityLifecycle::onActivityResumed", (args, methodResult) -> {
            // args
            // ref arg
            android.app.Activity var1 = (android.app.Activity) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.ActivityLifecycle ref = (cn.jiguang.analytics.page.ActivityLifecycle) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.ActivityLifecycle@" + refId + "::onActivityResumed(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onActivityResumed(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.ActivityLifecycle::onActivityPaused", (args, methodResult) -> {
            // args
            // ref arg
            android.app.Activity var1 = (android.app.Activity) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.ActivityLifecycle ref = (cn.jiguang.analytics.page.ActivityLifecycle) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.ActivityLifecycle@" + refId + "::onActivityPaused(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onActivityPaused(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.ActivityLifecycle::onActivityStopped", (args, methodResult) -> {
            // args
            // ref arg
            android.app.Activity var1 = (android.app.Activity) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.ActivityLifecycle ref = (cn.jiguang.analytics.page.ActivityLifecycle) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.ActivityLifecycle@" + refId + "::onActivityStopped(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onActivityStopped(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.ActivityLifecycle::onActivitySaveInstanceState", (args, methodResult) -> {
            // args
            // ref arg
            android.app.Activity var1 = (android.app.Activity) getHEAP().get((int) args.get("var1"));
            // ref arg
            android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.ActivityLifecycle ref = (cn.jiguang.analytics.page.ActivityLifecycle) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.ActivityLifecycle@" + refId + "::onActivitySaveInstanceState(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onActivitySaveInstanceState(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.ActivityLifecycle::onActivityDestroyed", (args, methodResult) -> {
            // args
            // ref arg
            android.app.Activity var1 = (android.app.Activity) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.ActivityLifecycle ref = (cn.jiguang.analytics.page.ActivityLifecycle) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.ActivityLifecycle@" + refId + "::onActivityDestroyed(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onActivityDestroyed(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::onFragmentResume", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::onFragmentResume(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onFragmentResume(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::onFragmentPause", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::onFragmentPause(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onFragmentPause(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::getInterval", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::getInterval(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getInterval();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::setInterval", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::setInterval(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setInterval(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::isStatEnable", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::isStatEnable(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isStatEnable();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::setStatEnable", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::setStatEnable(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStatEnable(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::onKillProcess", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::onKillProcess(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onKillProcess(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::getInstance", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA::getInstance(" + "" + ")");
            }
        
            // invoke native method
            cn.jiguang.analytics.page.PushSA result;
            try {
                result = cn.jiguang.analytics.page.PushSA.getInstance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::onResume", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::onResume(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onResume(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jiguang.analytics.page.PushSA::onPause", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jiguang.analytics.page.PushSA ref = (cn.jiguang.analytics.page.PushSA) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jiguang.analytics.page.PushSA@" + refId + "::onPause(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onPause(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jpush.android.service.DataProvider::onCreate", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jpush.android.service.DataProvider ref = (cn.jpush.android.service.DataProvider) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DataProvider@" + refId + "::onCreate(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.onCreate();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jpush.android.service.DataProvider::call", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            android.os.Bundle var3 = (android.os.Bundle) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jpush.android.service.DataProvider ref = (cn.jpush.android.service.DataProvider) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DataProvider@" + refId + "::call(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            android.os.Bundle result;
            try {
                result = ref.call(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jpush.android.service.DataShare::init", (args, methodResult) -> {
            // args
            // ref arg
            cn.jiguang.android.IDataShare var0 = (cn.jiguang.android.IDataShare) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DataShare::init(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                cn.jpush.android.service.DataShare.init(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jpush.android.service.DataShare::bind", (args, methodResult) -> {
            // args
            // ref arg
            cn.jiguang.android.IDataShare var1 = (cn.jiguang.android.IDataShare) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            cn.jpush.android.service.DataShare ref = (cn.jpush.android.service.DataShare) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DataShare@" + refId + "::bind(" + var1 + var2 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.bind(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jpush.android.service.DataShare::isBinding", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DataShare::isBinding(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = cn.jpush.android.service.DataShare.isBinding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jpush.android.service.DataShare::setBinding", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DataShare::setBinding(" + "" + ")");
            }
        
            // invoke native method
            try {
                cn.jpush.android.service.DataShare.setBinding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jpush.android.service.DataShare::onAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            android.os.Bundle var3 = (android.os.Bundle) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jpush.android.service.DataShare ref = (cn.jpush.android.service.DataShare) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DataShare@" + refId + "::onAction(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.onAction(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("cn.jpush.android.service.DataShare::execute", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            android.os.Bundle var3 = (android.os.Bundle) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jpush.android.service.DataShare ref = (cn.jpush.android.service.DataShare) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DataShare@" + refId + "::execute(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            android.os.Bundle result;
            try {
                result = ref.execute(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("cn.jpush.android.service.DownloadProvider::onCreate", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            cn.jpush.android.service.DownloadProvider ref = (cn.jpush.android.service.DownloadProvider) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DownloadProvider@" + refId + "::onCreate(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.onCreate();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("cn.jpush.android.service.DownloadProvider::call", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            android.os.Bundle var3 = (android.os.Bundle) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            cn.jpush.android.service.DownloadProvider ref = (cn.jpush.android.service.DownloadProvider) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: cn.jpush.android.service.DownloadProvider@" + refId + "::call(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            android.os.Bundle result;
            try {
                result = ref.call(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // factory
        put("ObjectFactory::createcn_jiguang_net_DefaultHostVerifier__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_net_DefaultHostVerifier__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            cn.jiguang.net.DefaultHostVerifier obj = new cn.jiguang.net.DefaultHostVerifier(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_net_SSLTrustManager__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_net_SSLTrustManager__String");
        
            // args
            // jsonable arg
            String param1 = (String) args.get("param1");
        
            // create target object
            cn.jiguang.net.SSLTrustManager obj = new cn.jiguang.net.SSLTrustManager(param1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_net_HttpRequest__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_net_HttpRequest__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            cn.jiguang.net.HttpRequest obj = new cn.jiguang.net.HttpRequest(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_net_HttpUtils__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_net_HttpUtils__");
        
            // args
        
        
            // create target object
            cn.jiguang.net.HttpUtils obj = new cn.jiguang.net.HttpUtils();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_net_HttpResponse__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_net_HttpResponse__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            cn.jiguang.net.HttpResponse obj = new cn.jiguang.net.HttpResponse(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_net_HttpResponse__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_net_HttpResponse__");
        
            // args
        
        
            // create target object
            cn.jiguang.net.HttpResponse obj = new cn.jiguang.net.HttpResponse();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_internal_JConstants__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_internal_JConstants__");
        
            // args
        
        
            // create target object
            cn.jiguang.internal.JConstants obj = new cn.jiguang.internal.JConstants();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_internal_ActionManager__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_internal_ActionManager__");
        
            // args
        
        
            // create target object
            cn.jiguang.internal.ActionManager obj = new cn.jiguang.internal.ActionManager();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_android_BuildConfig__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_android_BuildConfig__");
        
            // args
        
        
            // create target object
            cn.jiguang.android.BuildConfig obj = new cn.jiguang.android.BuildConfig();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_dy_Protocol__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_dy_Protocol__");
        
            // args
        
        
            // create target object
            cn.jiguang.dy.Protocol obj = new cn.jiguang.dy.Protocol();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_api_utils_ByteBufferUtils__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_api_utils_ByteBufferUtils__");
        
            // args
        
        
            // create target object
            cn.jiguang.api.utils.ByteBufferUtils obj = new cn.jiguang.api.utils.ByteBufferUtils();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_api_utils_OutputDataUtil__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_api_utils_OutputDataUtil__int");
        
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // create target object
            cn.jiguang.api.utils.OutputDataUtil obj = new cn.jiguang.api.utils.OutputDataUtil(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_api_utils_OutputDataUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_api_utils_OutputDataUtil__");
        
            // args
        
        
            // create target object
            cn.jiguang.api.utils.OutputDataUtil obj = new cn.jiguang.api.utils.OutputDataUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_api_utils_ProtocolUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_api_utils_ProtocolUtil__");
        
            // args
        
        
            // create target object
            cn.jiguang.api.utils.ProtocolUtil obj = new cn.jiguang.api.utils.ProtocolUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_api_JCoreInterface__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_api_JCoreInterface__");
        
            // args
        
        
            // create target object
            cn.jiguang.api.JCoreInterface obj = new cn.jiguang.api.JCoreInterface();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_api_JCoreManager__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_api_JCoreManager__");
        
            // args
        
        
            // create target object
            cn.jiguang.api.JCoreManager obj = new cn.jiguang.api.JCoreManager();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jiguang_analytics_page_ActivityLifecycle__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jiguang_analytics_page_ActivityLifecycle__");
        
            // args
        
        
            // create target object
            cn.jiguang.analytics.page.ActivityLifecycle obj = new cn.jiguang.analytics.page.ActivityLifecycle();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jcore_client_android_BuildConfig__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jcore_client_android_BuildConfig__");
        
            // args
        
        
            // create target object
            cn.jcore.client.android.BuildConfig obj = new cn.jcore.client.android.BuildConfig();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jpush_android_service_DActivity__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jpush_android_service_DActivity__");
        
            // args
        
        
            // create target object
            cn.jpush.android.service.DActivity obj = new cn.jpush.android.service.DActivity();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jpush_android_service_DataProvider__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jpush_android_service_DataProvider__");
        
            // args
        
        
            // create target object
            cn.jpush.android.service.DataProvider obj = new cn.jpush.android.service.DataProvider();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jpush_android_service_DownloadActivity__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jpush_android_service_DownloadActivity__");
        
            // args
        
        
            // create target object
            cn.jpush.android.service.DownloadActivity obj = new cn.jpush.android.service.DownloadActivity();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jpush_android_service_DataShare__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jpush_android_service_DataShare__");
        
            // args
        
        
            // create target object
            cn.jpush.android.service.DataShare obj = new cn.jpush.android.service.DataShare();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcn_jpush_android_service_DownloadProvider__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: cn_jpush_android_service_DownloadProvider__");
        
            // args
        
        
            // create target object
            cn.jpush.android.service.DownloadProvider obj = new cn.jpush.android.service.DownloadProvider();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
    }};

    public static void registerWith(Registrar registrar) {
        MethodChannel channel = new MethodChannel(registrar.messenger(), "me.yohom/jcore_fluttify");
        channel.setMethodCallHandler(new JcoreFluttifyPlugin(registrar));

        // register platform view
        
    }

    @Override
    public void onMethodCall(@NonNull MethodCall methodCall, @NonNull MethodChannel.Result methodResult) {
        Map<String, Object> args = (Map<String, Object>) methodCall.arguments;
        Handler handler = handlerMap.get(methodCall.method);
        if (handler != null) {
            try {
                handler.call(args, methodResult);
            } catch (Exception e) {
                e.printStackTrace();
                methodResult.error(e.getMessage(), null, null);
            }
        } else {
            methodResult.notImplemented();
        }
    }

    @FunctionalInterface
    interface Handler {
        void call(Map<String, Object> args, MethodChannel.Result methodResult) throws Exception;
    }
}
